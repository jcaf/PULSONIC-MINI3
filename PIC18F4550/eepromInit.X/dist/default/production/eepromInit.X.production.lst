

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 19 18:05:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _EECON2	set	4007
    50  0000                     _EEDATA	set	4008
    51  0000                     _EECON1bits	set	4006
    52  0000                     _EEADR	set	4009
    53  0000                     _GIE	set	32663
    54  0000                     _WREN	set	32050
    55  0000                     _CFGS	set	32054
    56  0000                     _EEPGD	set	32055
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007F0C                     __pcinit:
    62                           	opt callstack 0
    63  007F0C                     start_initialization:
    64                           	opt callstack 0
    65  007F0C                     __initialization:
    66                           	opt callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (2 bytes)
    69  007F0C  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  007F0E  6A12               	clrf	__pbssCOMRAM& (0+255),c
    71  007F10                     end_of_initialization:
    72                           	opt callstack 0
    73  007F10                     __end_of__initialization:
    74                           	opt callstack 0
    75  007F10  0100               	movlb	0
    76  007F12  EFB8  F03F         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	bssCOMRAM
    79  000012                     __pbssCOMRAM:
    80                           	opt callstack 0
    81  000012                     	ds	2
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt callstack 0
    86  000001                     ?___wmul:
    87                           	opt callstack 0
    88  000001                     eepromWrite@addr:
    89                           	opt callstack 0
    90  000001                     ___wmul@multiplier:
    91                           	opt callstack 0
    92                           
    93                           ; 2 bytes @ 0x0
    94  000001                     	ds	2
    95  000003                     eepromWrite@data:
    96                           	opt callstack 0
    97  000003                     ___wmul@multiplicand:
    98                           	opt callstack 0
    99                           
   100                           ; 2 bytes @ 0x2
   101  000003                     	ds	1
   102  000004                     eepromWrite@GIE_temp:
   103                           	opt callstack 0
   104                           
   105                           ; 1 bytes @ 0x3
   106  000004                     	ds	1
   107  000005                     ___wmul@product:
   108                           	opt callstack 0
   109                           
   110                           ; 2 bytes @ 0x4
   111  000005                     	ds	2
   112  000007                     eepromWrite_double@reg:
   113                           	opt callstack 0
   114                           
   115                           ; 2 bytes @ 0x6
   116  000007                     	ds	2
   117  000009                     eepromWrite_double@data:
   118                           	opt callstack 0
   119                           
   120                           ; 3 bytes @ 0x8
   121  000009                     	ds	3
   122  00000C                     eepromWrite_double@pEaddr:
   123                           	opt callstack 0
   124                           
   125                           ; 2 bytes @ 0xB
   126  00000C                     	ds	2
   127  00000E                     eepromWrite_double@pfDATA:
   128                           	opt callstack 0
   129                           
   130                           ; 1 bytes @ 0xD
   131  00000E                     	ds	1
   132  00000F                     eepromWrite_double@i:
   133                           	opt callstack 0
   134                           
   135                           ; 1 bytes @ 0xE
   136  00000F                     	ds	1
   137  000010                     main@i:
   138                           	opt callstack 0
   139                           
   140                           ; 2 bytes @ 0xF
   141  000010                     	ds	2
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 12 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  i               2   15[COMRAM] unsigned int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   162 ;;      Params:         0       0       0       0       0       0       0       0       0
   163 ;;      Locals:         2       0       0       0       0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0       0       0
   165 ;;      Totals:         2       0       0       0       0       0       0       0       0
   166 ;;Total ram usage:        2 bytes
   167 ;; Hardware stack levels required when called:    2
   168 ;; This function calls:
   169 ;;		_eepromWrite
   170 ;;		_eepromWrite_double
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           	psect	text0
   177  007F70                     __ptext0:
   178                           	opt callstack 0
   179  007F70                     _main:
   180                           	opt callstack 29
   181                           
   182                           ;main.c: 14: uint16_t i;;main.c: 15: for (i=0; i<8; i++)
   183                           
   184                           ;incstack = 0
   185  007F70  0E00               	movlw	0
   186  007F72  6E11               	movwf	main@i+1,c
   187  007F74  0E00               	movlw	0
   188  007F76  6E10               	movwf	main@i,c
   189  007F78                     l887:
   190                           
   191                           ;main.c: 16: {;main.c: 17: eepromWrite_double(i, 12.0);
   192  007F78  C010  F007         	movff	main@i,eepromWrite_double@reg
   193  007F7C  C011  F008         	movff	main@i+1,eepromWrite_double@reg+1
   194  007F80  0E00               	movlw	0
   195  007F82  6E09               	movwf	eepromWrite_double@data,c
   196  007F84  0E40               	movlw	64
   197  007F86  6E0A               	movwf	eepromWrite_double@data+1,c
   198  007F88  0E41               	movlw	65
   199  007F8A  6E0B               	movwf	eepromWrite_double@data+2,c
   200  007F8C  ECD9  F03F         	call	_eepromWrite_double	;wreg free
   201  007F90  4A10               	infsnz	main@i,f,c
   202  007F92  2A11               	incf	main@i+1,f,c
   203  007F94  5011               	movf	main@i+1,w,c
   204  007F96  E104               	bnz	u100
   205  007F98  0E08               	movlw	8
   206  007F9A  5C10               	subwf	main@i,w,c
   207  007F9C  A0D8               	btfss	status,0,c
   208  007F9E  D7EC               	goto	l887
   209  007FA0                     u100:
   210                           
   211                           ;main.c: 18: };main.c: 20: eepromWrite(i,22);
   212  007FA0  C010  F001         	movff	main@i,eepromWrite@addr
   213  007FA4  C011  F002         	movff	main@i+1,eepromWrite@addr+1
   214  007FA8  0E16               	movlw	22
   215  007FAA  6E03               	movwf	eepromWrite@data,c
   216  007FAC  EC9E  F03F         	call	_eepromWrite	;wreg free
   217  007FB0                     l11:
   218                           
   219                           ;main.c: 23: ;
   220  007FB0  D7FF               	goto	l11
   221  007FB2                     __end_of_main:
   222                           	opt callstack 0
   223                           
   224 ;; *************** function _eepromWrite_double *****************
   225 ;; Defined at:
   226 ;;		line 63 in file "../../../../../../FIRWAR/eslibrary/PIC/eeprom/eeprom.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;  reg             2    6[COMRAM] unsigned int 
   229 ;;  data            3    8[COMRAM] unsigned int 
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  pEaddr          2   11[COMRAM] PTR unsigned char 
   232 ;;		 -> NULL(0), 
   233 ;;  i               1   14[COMRAM] char 
   234 ;;  pfDATA          1   13[COMRAM] PTR unsigned char 
   235 ;;		 -> eepromWrite_double@data(3), 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         5       0       0       0       0       0       0       0       0
   246 ;;      Locals:         4       0       0       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0       0       0
   248 ;;      Totals:         9       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        9 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; Hardware stack levels required when called:    1
   252 ;; This function calls:
   253 ;;		___wmul
   254 ;;		_eepromWrite
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  007FB2                     __ptext1:
   262                           	opt callstack 0
   263  007FB2                     _eepromWrite_double:
   264                           	opt callstack 29
   265                           
   266                           ;eeprom.c: 65: int8_t i;;eeprom.c: 66: uint8_t *pEaddr;;eeprom.c: 67: uint8_t *pfDATA;;e
      +                          eprom.c: 69: pEaddr = (uint8_t*)(&pfBASE[reg]);
   267                           
   268                           ;incstack = 0
   269  007FB2  C007  F001         	movff	eepromWrite_double@reg,___wmul@multiplier
   270  007FB6  C008  F002         	movff	eepromWrite_double@reg+1,___wmul@multiplier+1
   271  007FBA  0E00               	movlw	0
   272  007FBC  6E04               	movwf	___wmul@multiplicand+1,c
   273  007FBE  0E03               	movlw	3
   274  007FC0  6E03               	movwf	___wmul@multiplicand,c
   275  007FC2  EC8B  F03F         	call	___wmul	;wreg free
   276  007FC6  0E00               	movlw	0
   277  007FC8  2401               	addwf	?___wmul,w,c
   278  007FCA  6E0C               	movwf	eepromWrite_double@pEaddr,c
   279  007FCC  0E00               	movlw	0
   280  007FCE  2002               	addwfc	?___wmul+1,w,c
   281  007FD0  6E0D               	movwf	eepromWrite_double@pEaddr+1,c
   282                           
   283                           ;eeprom.c: 70: pfDATA = (uint8_t*)&data;
   284  007FD2  0E09               	movlw	low eepromWrite_double@data
   285  007FD4  6E0E               	movwf	eepromWrite_double@pfDATA,c
   286                           
   287                           ;eeprom.c: 72: for (i=0; i<sizeof(double); i++)
   288  007FD6  0E00               	movlw	0
   289  007FD8  6E0F               	movwf	eepromWrite_double@i,c
   290  007FDA                     l871:
   291                           
   292                           ;eeprom.c: 73: {eepromWrite(pEaddr++, *(pfDATA++));}
   293  007FDA  C00C  F001         	movff	eepromWrite_double@pEaddr,eepromWrite@addr
   294  007FDE  C00D  F002         	movff	eepromWrite_double@pEaddr+1,eepromWrite@addr+1
   295  007FE2  500E               	movf	eepromWrite_double@pfDATA,w,c
   296  007FE4  6ED9               	movwf	fsr2l,c
   297  007FE6  6ADA               	clrf	fsr2h,c
   298  007FE8  50DF               	movf	indf2,w,c
   299  007FEA  6E03               	movwf	eepromWrite@data,c
   300  007FEC  EC9E  F03F         	call	_eepromWrite	;wreg free
   301  007FF0  2A0E               	incf	eepromWrite_double@pfDATA,f,c
   302  007FF2  4A0C               	infsnz	eepromWrite_double@pEaddr,f,c
   303  007FF4  2A0D               	incf	eepromWrite_double@pEaddr+1,f,c
   304  007FF6  2A0F               	incf	eepromWrite_double@i,f,c
   305  007FF8  0E02               	movlw	2
   306  007FFA  640F               	cpfsgt	eepromWrite_double@i,c
   307  007FFC  D7EE               	goto	l871
   308  007FFE  0012               	return	
   309  008000                     __end_of_eepromWrite_double:
   310                           	opt callstack 0
   311                           
   312 ;; *************** function _eepromWrite *****************
   313 ;; Defined at:
   314 ;;		line 13 in file "../../../../../../FIRWAR/eslibrary/PIC/eeprom/eeprom.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  addr            2    0[COMRAM] unsigned int 
   317 ;;  data            1    2[COMRAM] unsigned char 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  GIE_temp        1    3[COMRAM] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   329 ;;      Params:         3       0       0       0       0       0       0       0       0
   330 ;;      Locals:         1       0       0       0       0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0       0       0
   332 ;;      Totals:         4       0       0       0       0       0       0       0       0
   333 ;;Total ram usage:        4 bytes
   334 ;; Hardware stack levels used:    1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;;		_eepromWrite_double
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text2
   344  007F3C                     __ptext2:
   345                           	opt callstack 0
   346  007F3C                     _eepromWrite:
   347                           	opt callstack 29
   348                           
   349                           ;eeprom.c: 15: uint8_t GIE_temp;;eeprom.c: 17: EEADR = addr;
   350                           
   351                           ;incstack = 0
   352  007F3C  C001  FFA9         	movff	eepromWrite@addr,4009	;volatile
   353                           
   354                           ;eeprom.c: 18: EEDATA = data;
   355  007F40  C003  FFA8         	movff	eepromWrite@data,4008	;volatile
   356                           
   357                           ;eeprom.c: 19: EEPGD = 0;
   358  007F44  9EA6               	bcf	4006,7,c	;volsfr
   359                           
   360                           ;eeprom.c: 20: CFGS = 0;
   361  007F46  9CA6               	bcf	4006,6,c	;volsfr
   362                           
   363                           ;eeprom.c: 21: WREN = 1;
   364  007F48  84A6               	bsf	4006,2,c	;volsfr
   365                           
   366                           ;eeprom.c: 23: GIE_temp = GIE;
   367  007F4A  0E00               	movlw	0
   368  007F4C  BEF2               	btfsc	4082,7,c	;volatile
   369  007F4E  0E01               	movlw	1
   370  007F50  6E04               	movwf	eepromWrite@GIE_temp,c
   371                           
   372                           ;eeprom.c: 25: GIE=0;
   373  007F52  9EF2               	bcf	4082,7,c	;volatile
   374                           
   375                           ;eeprom.c: 26: EECON2 = 0x55;
   376  007F54  0E55               	movlw	85
   377  007F56  6EA7               	movwf	4007,c	;volsfr
   378                           
   379                           ;eeprom.c: 27: EECON2 = 0xAA;
   380  007F58  0EAA               	movlw	170
   381  007F5A  6EA7               	movwf	4007,c	;volsfr
   382                           
   383                           ;eeprom.c: 28: EECON1bits.WR = 1;
   384  007F5C  82A6               	bsf	4006,1,c	;volsfr
   385  007F5E                     l36:
   386  007F5E  B2A6               	btfsc	4006,1,c	;volsfr
   387  007F60  D7FE               	goto	l36
   388                           
   389                           ;eeprom.c: 33: GIE = GIE_temp;
   390  007F62  A004               	btfss	eepromWrite@GIE_temp,0,c
   391  007F64  D002               	goto	u70
   392  007F66  8EF2               	bsf	4082,7,c	;volatile
   393  007F68  D001               	goto	u85
   394  007F6A                     u70:
   395  007F6A  9EF2               	bcf	4082,7,c	;volatile
   396  007F6C                     u85:
   397                           
   398                           ;eeprom.c: 35: WREN = 0;
   399  007F6C  94A6               	bcf	4006,2,c	;volsfr
   400  007F6E  0012               	return		;funcret
   401  007F70                     __end_of_eepromWrite:
   402                           	opt callstack 0
   403                           
   404 ;; *************** function ___wmul *****************
   405 ;; Defined at:
   406 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  multiplier      2    0[COMRAM] unsigned int 
   409 ;;  multiplicand    2    2[COMRAM] unsigned int 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  product         2    4[COMRAM] unsigned int 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  2    0[COMRAM] unsigned int 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, prodl, prodh
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   421 ;;      Params:         4       0       0       0       0       0       0       0       0
   422 ;;      Locals:         2       0       0       0       0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0       0       0
   424 ;;      Totals:         6       0       0       0       0       0       0       0       0
   425 ;;Total ram usage:        6 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		_eepromWrite_double
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text3
   435  007F16                     __ptext3:
   436                           	opt callstack 0
   437  007F16                     ___wmul:
   438                           	opt callstack 29
   439                           
   440                           ;incstack = 0
   441  007F16  5001               	movf	___wmul@multiplier,w,c
   442  007F18  0203               	mulwf	___wmul@multiplicand,c
   443  007F1A  CFF3 F005          	movff	prodl,___wmul@product
   444  007F1E  CFF4 F006          	movff	prodh,___wmul@product+1
   445  007F22  5001               	movf	___wmul@multiplier,w,c
   446  007F24  0204               	mulwf	___wmul@multiplicand+1,c
   447  007F26  50F3               	movf	prodl,w,c
   448  007F28  2606               	addwf	___wmul@product+1,f,c
   449  007F2A  5002               	movf	___wmul@multiplier+1,w,c
   450  007F2C  0203               	mulwf	___wmul@multiplicand,c
   451  007F2E  50F3               	movf	prodl,w,c
   452  007F30  2606               	addwf	___wmul@product+1,f,c
   453  007F32  C005  F001         	movff	___wmul@product,?___wmul
   454  007F36  C006  F002         	movff	___wmul@product+1,?___wmul+1
   455  007F3A  0012               	return		;funcret
   456  007F3C                     __end_of___wmul:
   457                           	opt callstack 0
   458  0000                     
   459                           	psect	rparam
   460  0000                     tosu	equ	0xFFF
   461                           tosh	equ	0xFFE
   462                           tosl	equ	0xFFD
   463                           stkptr	equ	0xFFC
   464                           pclatu	equ	0xFFB
   465                           pclath	equ	0xFFA
   466                           pcl	equ	0xFF9
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           prodh	equ	0xFF4
   472                           prodl	equ	0xFF3
   473                           indf0	equ	0xFEF
   474                           postinc0	equ	0xFEE
   475                           postdec0	equ	0xFED
   476                           preinc0	equ	0xFEC
   477                           plusw0	equ	0xFEB
   478                           fsr0h	equ	0xFEA
   479                           fsr0l	equ	0xFE9
   480                           wreg	equ	0xFE8
   481                           indf1	equ	0xFE7
   482                           postinc1	equ	0xFE6
   483                           postdec1	equ	0xFE5
   484                           preinc1	equ	0xFE4
   485                           plusw1	equ	0xFE3
   486                           fsr1h	equ	0xFE2
   487                           fsr1l	equ	0xFE1
   488                           bsr	equ	0xFE0
   489                           indf2	equ	0xFDF
   490                           postinc2	equ	0xFDE
   491                           postdec2	equ	0xFDD
   492                           preinc2	equ	0xFDC
   493                           plusw2	equ	0xFDB
   494                           fsr2h	equ	0xFDA
   495                           fsr2l	equ	0xFD9
   496                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eepromWrite_double@pfDATA	PTR unsigned char  size(1) Largest target is 3
		 -> eepromWrite_double@data(COMRAM[3]), 

    pfBASE	PTR  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    eepromWrite_double@pEaddr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_eepromWrite_double
    _eepromWrite_double->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1560
                                             15 COMRAM     2     2      0
                        _eepromWrite
                 _eepromWrite_double
 ---------------------------------------------------------------------------------
 (1) _eepromWrite_double                                   9     4      5    1099
                                              6 COMRAM     9     4      5
                             ___wmul
                        _eepromWrite
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          4     1      3     371
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     437
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eepromWrite
   _eepromWrite_double
     ___wmul
     _eepromWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      13       1       20.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      20        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 19 18:05:46 2019

                         l11 7FB0                           l36 7F5E                           u70 7F6A  
                         u85 7F6C          ___wmul@multiplicand 0003                          l871 7FDA  
                        l887 7F78                          _GIE 007F97                          u100 7FA0  
                       _CFGS 007D36                         _WREN 007D32                         _main 7F70  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___param_bank 000000                        ?_main 0001                        _EEADR 000FA9  
                      _EEPGD 007D37                        main@i 0010                        status 000FD8  
            __initialization 7F0C                 __end_of_main 7FB2                       ??_main 0010  
              __activetblptr 000000                       _EEDATA 000FA8                       _EECON2 000FA7  
       __size_of_eepromWrite 0034                       _pfBASE 0012                       ___wmul 7F16  
            eepromWrite@addr 0001              eepromWrite@data 0003                   __accesstop 0060  
    __end_of__initialization 7F10                ___rparam_used 000001               __pcstackCOMRAM 0001  
 __end_of_eepromWrite_double 8000          eepromWrite@GIE_temp 0004        eepromWrite_double@reg 0007  
                    ?___wmul 0001                      __Hparam 0000                      __Lparam 0000  
            __size_of___wmul 0026                      __pcinit 7F0C                      __ramtop 0800  
                    __ptext0 7F70                      __ptext1 7FB2                      __ptext2 7F3C  
                    __ptext3 7F16         end_of_initialization 7F10                ??_eepromWrite 0004  
             __end_of___wmul 7F3C          start_initialization 7F0C           _eepromWrite_double 7FB2  
        eepromWrite_double@i 000F          ?_eepromWrite_double 0007          __end_of_eepromWrite 7F70  
                   ??___wmul 0005         ??_eepromWrite_double 000C                  __pbssCOMRAM 0012  
   eepromWrite_double@pEaddr 000C     eepromWrite_double@pfDATA 000E       eepromWrite_double@data 0009  
             ___wmul@product 0005                  _eepromWrite 7F3C            ___wmul@multiplier 0001  
                 _EECON1bits 000FA6                     __Hrparam 0000                     __Lrparam 0000  
              __size_of_main 0042  __size_of_eepromWrite_double 004E                 ?_eepromWrite 0001  
